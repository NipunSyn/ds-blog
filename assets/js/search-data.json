{
  
    
        "post0": {
            "title": "Title",
            "content": "&gt; In this post we will see how to setup a virtual environment for any ML project you want to work on. This is the blueprint that you will need to follow and after going through this you will realise how easy it really is to get going xD - categories: [virtual environment, git, conda] - badges: true - comments: true - search_exclude: false - image: images/b1_create-venv/post.jpeg .",
            "url": "https://nipunsyn.github.io/ds-blog/2022/07/17/test.html",
            "relUrl": "/2022/07/17/test.html",
            "date": " • Jul 17, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Creating a Conda Virtual Environment",
            "content": "What is a virtual environment . Beginning any new project would require you to have a set of tools that would help you perform the required task at hand. Similarly, before starting any Machine Learning project, it is important to set up an isolated environment where you download all the required libraries - for data manipulation, doing math, visualisation, modelling, and so on - that will act as your set of tools for that project. Creating an isolated environment for a new project (or for a set of similar projects) not only helps you avoid any dependency issues that you might typically encounter (for example, missing libraries) but also makes it easy for you to make your code available to others, as all they would need to do is create an environment identical to yours and simply run the code! . Setting up an environment on M1 Macbook . Prerequisites . The first thing you want to do before creating an environment is to ensure that you have XCode installed on your system. XCode contains a collection of tools that are required by your system to build apps, and a lot of Machine Learning packages are also dependent on XCode. Simply go to the Mac App Store and download XCode from there. Do keep in mind that it is huge (~10GB), but you only need to download it once and it is definitely worth the resources. The next thing you want to do is install the XCode command line tools. Simply open up your terminal and paste the following line of code: . xcode-select --install . | Next, you want to download miniforge3 for Apple architecture, and install it to the home directory by pasting the following lines in your terminal: . chmod +x ~/Downloads/Miniforge3-MacOSX-arm64.sh sh ~/Downloads/Miniforge3-MacOSX-arm64.sh source ~/miniforge3/bin/activate . | . Restart your terminal. . Creating a virtual environment . Create and activate a conda environment, install pip: . conda create -n new_env conda activate new_env conda install pip . | If you have a requirements.txt file, simply install it to your environment and you are ready to go (more on this later): . pip install -r requirements.txt . | If you manually want to install packages, you can do that too. For example, you can install numpy like this: . with conda . conda install packagename . | with pip . pip install numpy . | . | Once you are done with the work, simply deactivate your environment: . conda deactivate . | And if you want to delete a virtual environment: . conda env remove -n new_env That&#39;s it. This is the blueprint you need to follow for any project you want to work on. . | . Cloning a repository . Now there may be times when you want to clone a repository and run it locally on your system. This is pretty common in the beginning when all you want to do is run an existing project on your system and simply understand how it functions. Doing that is also pretty easy. Let&#39;s do this using an example repo. . Activate your environment done before . conda activate new_env . | Open up your terminal and create a folder where you want to clone the repo: . mkdir LogReg cd mkdir/ . | Go to the github repository you want to clone and copy the repository link . | . Clone the repository using: . git clone https://github.com/NipunSyn/Logistic-Regression-from-scratch.git . | Go to the folder that contains the requirements.txt file and install it . pip install -r requirements.txt This should install all the required libraries in your environment. That&#39;s it! Simply go to your IDE and select this environment as your kernel and you are ready to go. Not as daunting as it initially felt, right? That&#39;s the case with most of the topics you will encounter on your journey. . | . Hope this post helped you in setting up your environment. In the posts that follow, we will cover a few key topics before moving on to implementing some fundamental models from scratch, and much more. Happy Learning :) . .",
            "url": "https://nipunsyn.github.io/ds-blog/virtual%20environment/git/conda/2022/07/12/create-venv.html",
            "relUrl": "/virtual%20environment/git/conda/2022/07/12/create-venv.html",
            "date": " • Jul 12, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "About me, I’m Nipun Tewari, currently working as an ML Engineer in one of India’s fastest growing fintech startups. I graduated from Birla Institute of Technology and Science in 2022 with a major in Civil Engineering and a minor in Data Science. I started my journey in data science in 2020 when the entire country was under lockdown and all the colleges were shut. So, just like everyone else, I also thought it would be a good idea to learn something new, and now I’m here xD . In my free time, I love reading books especially non-fiction. I was a member of my school, as well as my college football team and never miss a chance to hit the field whenever I get one, and I support Manchester United in the English Premier League. From music, TV series, anime, you can hit me up for anything for a chat. And oh, I also love playing the guitar xD . That’s about me. You can follow me on Twitter: @NipunSyn to connect .",
          "url": "https://nipunsyn.github.io/ds-blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://nipunsyn.github.io/ds-blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}